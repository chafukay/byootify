# Byootify App - Software Requirements Specification (SRS) and Architecture

## I. System Overview
Byootify is a beauty services platform that connects beauty providers and customers for convenient, on-demand hair, skincare, and barber services. The app supports scheduling, payments, reviews, provider portfolios, and real-time communication.

## II. Core Modules

### 1. User Management
- User Roles: Client, Provider, Admin
- Features:
  - Registration & Login (Email, Password, Phone)
  - Two-Factor Authentication
  - Password Reset
  - Profile Management

### 2. Booking System
- Features:
  - Search & Filter Providers (Location, Price, Rating, Availability)
  - Request Appointments
  - Schedule/Reschedule/Cancel Appointments
  - Manage Provider Calendar
  - Automated Reminders (Email/SMS)

### 3. Payments & Fees
- Integration: Stripe / PayPal
- Commission Structure:
  - 15% on completed jobs
  - 25% reservation hold fee
  - 10% service fee
  - 15% cancellation fee (goes to provider)
- Features:
  - Save and manage payment methods
  - Provider Payouts (Next-Day Deposits)
  - Tip Processing
  - Refunds and Disputes

### 4. Provider Services & Portfolios
- Features:
  - Add/Manage Service Categories & Prices
  - Upload Certifications
  - Upload Photos/Videos
  - Indicate Home Visits Availability
  - Token System for Boosted Listings

### 5. Messaging System
- Features:
  - Anonymous Chat (with random email routing)
  - Push Notifications (Firebase)
  - Admin Messaging System

### 6. Ratings & Reviews
- Features:
  - Leave Ratings after Completed Jobs
  - Written Feedback
  - Display on Provider Profile

### 7. Admin Panel
- Features:
  - User Management (Ban/Approve)
  - View Reports (Income, Jobs, Ratings)
  - Manage Disputes
  - Manage Tokens, Ads, Subscriptions
  - Enable/Disable Services

### 8. Reports & Analytics
- Features:
  - Track Provider Performance
  - Job Completion Stats
  - Earnings Reports
  - Customer Retention Analytics

### 9. Add-Ons & Training
- Byootify University (E-learning)
- In-App Store (Beauty Products)
- Subscription Models (For Providers)

## III. Architecture

### 1. Frontend
- Mobile App: Flutter (iOS/Android)
- Admin Web App: React.js or Vue.js

### 2. Backend
- Framework: Node.js + Express or Django REST Framework
- Database: PostgreSQL (primary), Redis (caching), S3 (media)
- Authentication: Firebase Auth or JWT
- APIs: RESTful APIs, GraphQL (optional)
- Realtime: Firebase / Socket.io for messaging

### 3. DevOps
- Containerization: Docker
- CI/CD: GitHub Actions / GitLab CI
- Hosting: AWS (EC2, S3, RDS), Firebase, or DigitalOcean
- Monitoring: Sentry, DataDog, AWS CloudWatch

### 4. 3rd Party Integrations
- Stripe / PayPal for Payments
- Twilio for SMS
- Google Calendar API
- Firebase Cloud Messaging
- Instagram / Facebook APIs

## IV. MVP Deliverables
1. Mobile App (Client/Provider views)
2. Admin Dashboard (Web)
3. REST API Backend
4. Stripe/PayPal Integration
5. Booking System (Search, Schedule, Manage)
6. Messaging System (Anonymized)
7. Token Visibility System
8. Ratings/Reviews Engine
9. Basic Reporting
10. Notifications (Push/SMS/Email)

## V. Future Features (Post-MVP)
- AI-based recommendations (styles, providers)
- Group Bookings
- Gift Cards
- Loyalty Points & Milestones (e.g., 401K, Healthcare)
- AI Chatbot Support
- Multilingual Support

---

## VI. QA Test Case Scenarios

### A. User Registration & Authentication
1. Register as a Client with valid input
2. Register as a Provider with valid input and upload documents
3. Attempt registration with missing or invalid fields
4. Login with correct and incorrect credentials
5. Trigger and complete password reset
6. Complete 2FA authentication

### B. Provider Search & Booking
1. Search for providers using different filters (location, price, rating)
2. View provider profile with photos, certifications, and availability
3. Schedule an appointment successfully
4. Attempt to double-book the same provider
5. Cancel or reschedule appointment
6. Receive and view confirmation and reminder notifications

### C. Messaging & Notifications
1. Initiate anonymous chat with a provider
2. Receive real-time message notification
3. Send and receive messages correctly

### D. Payments & Earnings
1. Client adds and selects payment method (Stripe or PayPal)
2. Make payment after confirming job done
3. View transaction history and print receipt
4. Provider sees updated wallet and next-day deposit
5. Client tips provider and provider views it
6. Trigger and resolve a payment dispute

### E. Provider Management
1. Provider creates and updates service listing
2. Provider uploads and manages portfolio
3. Provider sets and edits availability
4. Provider receives and confirms appointments

### F. Ratings & Reviews
1. Leave rating and feedback after service
2. View reviews on provider profile
3. Provider responds to reviews (if allowed)

### G. Admin Panel
1. Admin views user list and bans/unbans a user
2. Admin resolves and logs a dispute
3. Admin reviews income and service performance reports
4. Admin adds or manages token boosts and subscription entries

### H. Add-Ons
1. Provider purchases tokens and confirms increased visibility
2. Access and enroll in a course on Byootify University
3. Buy a product from the Byootify Store

---
# End of Developer SRS Document
